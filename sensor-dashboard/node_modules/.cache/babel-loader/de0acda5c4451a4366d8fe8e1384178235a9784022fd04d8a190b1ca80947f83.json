{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelSelect as _vModelSelect, withDirectives as _withDirectives, vModelText as _vModelText, resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-daf9268c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Sensor Data Chart\", -1 /* HOISTED */));\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"sensorType\"\n}, \"Sensor Type:\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"\"\n}, \"All\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"TEMPERATURE\"\n}, \"Temperature\", -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"HUMIDITY\"\n}, \"Humidity\", -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"LIGHT_INTENSITY\"\n}, \"Light Intensity\", -1 /* HOISTED */));\nconst _hoisted_7 = [_hoisted_3, _hoisted_4, _hoisted_5, _hoisted_6];\nconst _hoisted_8 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"startTime\"\n}, \"Start Time:\", -1 /* HOISTED */));\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"endTime\"\n}, \"End Time:\", -1 /* HOISTED */));\nconst _hoisted_10 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_line_chart = _resolveComponent(\"line-chart\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"div\", null, [_hoisted_2, _withDirectives(_createElementVNode(\"select\", {\n    id: \"sensorType\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedType = $event)\n  }, [..._hoisted_7], 512 /* NEED_PATCH */), [[_vModelSelect, $data.selectedType]]), _hoisted_8, _withDirectives(_createElementVNode(\"input\", {\n    type: \"datetime-local\",\n    id: \"startTime\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.startTime = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.startTime]]), _hoisted_9, _withDirectives(_createElementVNode(\"input\", {\n    type: \"datetime-local\",\n    id: \"endTime\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.endTime = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.endTime]]), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.fetchSensorData && $options.fetchSensorData(...args))\n  }, \"Fetch Data\")]), $data.chartData.labels.length ? (_openBlock(), _createBlock(_component_line_chart, {\n    key: 0,\n    \"chart-data\": $data.chartData,\n    options: $data.chartOptions\n  }, null, 8 /* PROPS */, [\"chart-data\", \"options\"])) : (_openBlock(), _createElementBlock(\"p\", _hoisted_10, \"No data available\"))]);\n}","map":{"version":3,"names":["_createElementVNode","for","value","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6","key","_createElementBlock","_hoisted_1","_hoisted_2","id","_cache","$event","$data","selectedType","_hoisted_7","_hoisted_8","type","startTime","_hoisted_9","endTime","onClick","args","$options","fetchSensorData","chartData","labels","length","_createBlock","_component_line_chart","options","chartOptions","_hoisted_10"],"sources":["D:\\Vue\\sensor-dashboard\\src\\components\\SensorDataChart.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Sensor Data Chart</h2>\r\n    <div>\r\n      <label for=\"sensorType\">Sensor Type:</label>\r\n      <select id=\"sensorType\" v-model=\"selectedType\">\r\n        <option value=\"\">All</option>\r\n        <option value=\"TEMPERATURE\">Temperature</option>\r\n        <option value=\"HUMIDITY\">Humidity</option>\r\n        <option value=\"LIGHT_INTENSITY\">Light Intensity</option>\r\n      </select>\r\n\r\n      <label for=\"startTime\">Start Time:</label>\r\n      <input type=\"datetime-local\" id=\"startTime\" v-model=\"startTime\">\r\n\r\n      <label for=\"endTime\">End Time:</label>\r\n      <input type=\"datetime-local\" id=\"endTime\" v-model=\"endTime\">\r\n\r\n      <button @click=\"fetchSensorData\">Fetch Data</button>\r\n    </div>\r\n    <line-chart v-if=\"chartData.labels.length\" :chart-data=\"chartData\" :options=\"chartOptions\"></line-chart>\r\n    <p v-else>No data available</p>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { Line } from 'vue-chartjs';\r\nimport {\r\n  Chart as ChartJS,\r\n  \r\n  registerables\r\n} from 'chart.js';\r\n\r\nChartJS.register(...registerables);\r\n\r\nexport default {\r\n  components: {\r\n    LineChart: Line\r\n  },\r\n  data() {\r\n    return {\r\n      selectedType: 'TEMPERATURE',\r\n      startTime: '',\r\n      endTime: '',\r\n      sensorData: [],\r\n      chartData: {\r\n        labels: [],\r\n        datasets: [\r\n          {\r\n            label: 'Sensor Data',\r\n            backgroundColor: '#f87979',\r\n            borderColor: '#f87979',\r\n            fill: false,\r\n            data: []\r\n          }\r\n        ]\r\n      },\r\n      chartOptions: {\r\n        responsive: true,\r\n        maintainAspectRatio: false\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    async fetchSensorData() {\r\n      try {\r\n        const response = await axios.get('http://localhost:8080/api/sensor-data/type/range', {\r\n          params: {\r\n            type: this.selectedType,\r\n            startTime: this.startTime ? new Date(this.startTime).toISOString() : null,\r\n            endTime: this.endTime ? new Date(this.endTime).toISOString() : null\r\n          }\r\n        });\r\n        this.sensorData = response.data;\r\n        this.updateChart();\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    },\r\n    updateChart() {\r\n      const labels = this.sensorData.map(data => new Date(data.timestamp).toLocaleString());\r\n      const values = this.sensorData.map(data => data.value);\r\n\r\n      this.chartData.labels = labels;\r\n      this.chartData.datasets[0].data = values;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#sensorType, #startTime, #endTime {\r\n  margin: 0 10px;\r\n}\r\n</style>\r\n"],"mappings":";;gEAEIA,mBAAA,CAA0B,YAAtB,mBAAiB;gEAEnBA,mBAAA,CAA4C;EAArCC,GAAG,EAAC;AAAY,GAAC,cAAY;gEAElCD,mBAAA,CAA6B;EAArBE,KAAK,EAAC;AAAE,GAAC,KAAG;gEACpBF,mBAAA,CAAgD;EAAxCE,KAAK,EAAC;AAAa,GAAC,aAAW;gEACvCF,mBAAA,CAA0C;EAAlCE,KAAK,EAAC;AAAU,GAAC,UAAQ;gEACjCF,mBAAA,CAAwD;EAAhDE,KAAK,EAAC;AAAiB,GAAC,iBAAe;oBAH/CC,UAA6B,EAC7BC,UAAgD,EAChDC,UAA0C,EAC1CC,UAAwD,C;gEAG1DN,mBAAA,CAA0C;EAAnCC,GAAG,EAAC;AAAW,GAAC,aAAW;gEAGlCD,mBAAA,CAAsC;EAA/BC,GAAG,EAAC;AAAS,GAAC,WAAS;;EAfpCM,GAAA;AAAA;;;uBACEC,mBAAA,CAqBM,cApBJC,UAA0B,EAC1BT,mBAAA,CAgBM,cAfJU,UAA4C,E,gBAC5CV,mBAAA,CAKS;IALDW,EAAE,EAAC,YAAY;IAL7B,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAKuCC,KAAA,CAAAC,YAAY,GAAAF,MAAA;KALnD,IAAAG,UAAA,2B,gBAKuCF,KAAA,CAAAC,YAAY,E,GAO7CE,UAA0C,E,gBAC1CjB,mBAAA,CAAgE;IAAzDkB,IAAI,EAAC,gBAAgB;IAACP,EAAE,EAAC,WAAW;IAbjD,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAa2DC,KAAA,CAAAK,SAAS,GAAAN,MAAA;iDAATC,KAAA,CAAAK,SAAS,E,GAE9DC,UAAsC,E,gBACtCpB,mBAAA,CAA4D;IAArDkB,IAAI,EAAC,gBAAgB;IAACP,EAAE,EAAC,SAAS;IAhB/C,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAgByDC,KAAA,CAAAO,OAAO,GAAAR,MAAA;iDAAPC,KAAA,CAAAO,OAAO,E,GAE1DrB,mBAAA,CAAoD;IAA3CsB,OAAK,EAAAV,MAAA,QAAAA,MAAA,UAAAW,IAAA,KAAEC,QAAA,CAAAC,eAAA,IAAAD,QAAA,CAAAC,eAAA,IAAAF,IAAA,CAAe;KAAE,YAAU,E,GAE3BT,KAAA,CAAAY,SAAS,CAACC,MAAM,CAACC,MAAM,I,cAAzCC,YAAA,CAAwGC,qBAAA;IApB5GvB,GAAA;IAoBgD,YAAU,EAAEO,KAAA,CAAAY,SAAS;IAAGK,OAAO,EAAEjB,KAAA,CAAAkB;uEAC7ExB,mBAAA,CAA+B,KArBnCyB,WAAA,EAqBc,mBAAiB,G","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}