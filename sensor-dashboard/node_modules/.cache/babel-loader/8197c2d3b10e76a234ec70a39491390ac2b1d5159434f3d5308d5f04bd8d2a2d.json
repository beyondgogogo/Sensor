{"ast":null,"code":"import axios from 'axios';\nimport { Line } from 'vue-chartjs';\nimport { Chart as ChartJS, registerables } from 'chart.js';\nChartJS.register(...registerables);\nexport default {\n  components: {\n    LineChart: Line\n  },\n  data() {\n    return {\n      selectedType: 'TEMPERATURE',\n      startTime: '',\n      endTime: '',\n      sensorData: [],\n      chartData: {\n        labels: [],\n        datasets: [{\n          label: 'Sensor Data',\n          backgroundColor: '#f87979',\n          borderColor: '#f87979',\n          fill: false,\n          data: []\n        }]\n      },\n      chartOptions: {\n        responsive: true,\n        maintainAspectRatio: false\n      }\n    };\n  },\n  methods: {\n    async fetchSensorData() {\n      try {\n        const response = await axios.get('http://localhost:8080/api/sensor-data/type/range', {\n          params: {\n            type: this.selectedType,\n            startTime: this.startTime ? new Date(this.startTime).toISOString() : null,\n            endTime: this.endTime ? new Date(this.endTime).toISOString() : null\n          }\n        });\n        this.sensorData = response.data;\n        this.updateChart();\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    updateChart() {\n      const labels = this.sensorData.map(data => new Date(data.timestamp).toLocaleString());\n      const values = this.sensorData.map(data => data.value);\n      this.chartData.labels = labels;\n      this.chartData.datasets[0].data = values;\n    }\n  }\n};","map":{"version":3,"names":["axios","Line","Chart","ChartJS","registerables","register","components","LineChart","data","selectedType","startTime","endTime","sensorData","chartData","labels","datasets","label","backgroundColor","borderColor","fill","chartOptions","responsive","maintainAspectRatio","methods","fetchSensorData","response","get","params","type","Date","toISOString","updateChart","error","console","map","timestamp","toLocaleString","values","value"],"sources":["D:\\Vue\\sensor-dashboard\\src\\components\\SensorDataChart.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h2>Sensor Data Chart</h2>\r\n      <div>\r\n        <label for=\"sensorType\">Sensor Type:</label>\r\n        <select id=\"sensorType\" v-model=\"selectedType\">\r\n          <option value=\"\">All</option>\r\n          <option value=\"TEMPERATURE\">Temperature</option>\r\n          <option value=\"HUMIDITY\">Humidity</option>\r\n          <option value=\"LIGHT_INTENSITY\">Light Intensity</option>\r\n        </select>\r\n  \r\n        <label for=\"startTime\">Start Time:</label>\r\n        <input type=\"datetime-local\" id=\"startTime\" v-model=\"startTime\">\r\n  \r\n        <label for=\"endTime\">End Time:</label>\r\n        <input type=\"datetime-local\" id=\"endTime\" v-model=\"endTime\">\r\n  \r\n        <button @click=\"fetchSensorData\">Fetch Data</button>\r\n      </div>\r\n      <line-chart v-if=\"chartData.labels.length\" :chart-data=\"chartData\" :options=\"chartOptions\"></line-chart>\r\n      <p v-else>No data available</p>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  import { Line } from 'vue-chartjs';\r\n  import {\r\n    Chart as ChartJS,\r\n    \r\n    registerables\r\n  } from 'chart.js';\r\n  \r\n  ChartJS.register(...registerables);\r\n  \r\n  export default {\r\n    components: {\r\n      LineChart: Line\r\n    },\r\n    data() {\r\n      return {\r\n        selectedType: 'TEMPERATURE',\r\n        startTime: '',\r\n        endTime: '',\r\n        sensorData: [],\r\n        chartData: {\r\n          labels: [],\r\n          datasets: [\r\n            {\r\n              label: 'Sensor Data',\r\n              backgroundColor: '#f87979',\r\n              borderColor: '#f87979',\r\n              fill: false,\r\n              data: []\r\n            }\r\n          ]\r\n        },\r\n        chartOptions: {\r\n          responsive: true,\r\n          maintainAspectRatio: false\r\n        }\r\n      };\r\n    },\r\n    methods: {\r\n      async fetchSensorData() {\r\n        try {\r\n          const response = await axios.get('http://localhost:8080/api/sensor-data/type/range', {\r\n            params: {\r\n              type: this.selectedType,\r\n              startTime: this.startTime ? new Date(this.startTime).toISOString() : null,\r\n              endTime: this.endTime ? new Date(this.endTime).toISOString() : null\r\n            }\r\n          });\r\n          this.sensorData = response.data;\r\n          this.updateChart();\r\n        } catch (error) {\r\n          console.error(error);\r\n        }\r\n      },\r\n      updateChart() {\r\n        const labels = this.sensorData.map(data => new Date(data.timestamp).toLocaleString());\r\n        const values = this.sensorData.map(data => data.value);\r\n  \r\n        this.chartData.labels = labels;\r\n        this.chartData.datasets[0].data = values;\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  #sensorType, #startTime, #endTime {\r\n    margin: 0 10px;\r\n  }\r\n  </style>\r\n  "],"mappings":"AA0BE,OAAOA,KAAI,MAAO,OAAO;AACzB,SAASC,IAAG,QAAS,aAAa;AAClC,SACEC,KAAI,IAAKC,OAAO,EAEhBC,aAAY,QACP,UAAU;AAEjBD,OAAO,CAACE,QAAQ,CAAC,GAAGD,aAAa,CAAC;AAElC,eAAe;EACbE,UAAU,EAAE;IACVC,SAAS,EAAEN;EACb,CAAC;EACDO,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,YAAY,EAAE,aAAa;MAC3BC,SAAS,EAAE,EAAE;MACbC,OAAO,EAAE,EAAE;MACXC,UAAU,EAAE,EAAE;MACdC,SAAS,EAAE;QACTC,MAAM,EAAE,EAAE;QACVC,QAAQ,EAAE,CACR;UACEC,KAAK,EAAE,aAAa;UACpBC,eAAe,EAAE,SAAS;UAC1BC,WAAW,EAAE,SAAS;UACtBC,IAAI,EAAE,KAAK;UACXX,IAAI,EAAE;QACR;MAEJ,CAAC;MACDY,YAAY,EAAE;QACZC,UAAU,EAAE,IAAI;QAChBC,mBAAmB,EAAE;MACvB;IACF,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,eAAeA,CAAA,EAAG;MACtB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMzB,KAAK,CAAC0B,GAAG,CAAC,kDAAkD,EAAE;UACnFC,MAAM,EAAE;YACNC,IAAI,EAAE,IAAI,CAACnB,YAAY;YACvBC,SAAS,EAAE,IAAI,CAACA,SAAQ,GAAI,IAAImB,IAAI,CAAC,IAAI,CAACnB,SAAS,CAAC,CAACoB,WAAW,CAAC,IAAI,IAAI;YACzEnB,OAAO,EAAE,IAAI,CAACA,OAAM,GAAI,IAAIkB,IAAI,CAAC,IAAI,CAAClB,OAAO,CAAC,CAACmB,WAAW,CAAC,IAAI;UACjE;QACF,CAAC,CAAC;QACF,IAAI,CAAClB,UAAS,GAAIa,QAAQ,CAACjB,IAAI;QAC/B,IAAI,CAACuB,WAAW,CAAC,CAAC;MACpB,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IACDD,WAAWA,CAAA,EAAG;MACZ,MAAMjB,MAAK,GAAI,IAAI,CAACF,UAAU,CAACsB,GAAG,CAAC1B,IAAG,IAAK,IAAIqB,IAAI,CAACrB,IAAI,CAAC2B,SAAS,CAAC,CAACC,cAAc,CAAC,CAAC,CAAC;MACrF,MAAMC,MAAK,GAAI,IAAI,CAACzB,UAAU,CAACsB,GAAG,CAAC1B,IAAG,IAAKA,IAAI,CAAC8B,KAAK,CAAC;MAEtD,IAAI,CAACzB,SAAS,CAACC,MAAK,GAAIA,MAAM;MAC9B,IAAI,CAACD,SAAS,CAACE,QAAQ,CAAC,CAAC,CAAC,CAACP,IAAG,GAAI6B,MAAM;IAC1C;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}