{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_apexchart = _resolveComponent(\"apexchart\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"h2\", null, _toDisplayString($props.title), 1 /* TEXT */), _createVNode(_component_apexchart, {\n    type: \"radialBar\",\n    height: \"350\",\n    options: $options.chartOptions,\n    series: [$props.value]\n  }, null, 8 /* PROPS */, [\"options\", \"series\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_toDisplayString","$props","title","_createVNode","_component_apexchart","type","height","options","$options","chartOptions","series","value"],"sources":["D:\\Vue\\sensor-dashboard\\src\\components\\SensorGauge.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h2>{{ title }}</h2>\r\n      <apexchart type=\"radialBar\" height=\"350\" :options=\"chartOptions\" :series=\"[value]\"></apexchart>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import VueApexCharts from \"vue-apexcharts\";\r\n  \r\n  export default {\r\n    components: {\r\n      apexchart: VueApexCharts\r\n    },\r\n    props: {\r\n      title: {\r\n        type: String,\r\n        default: ''\r\n      },\r\n      value: {\r\n        type: Number,\r\n        default: 0\r\n      },\r\n      maxValue: {\r\n        type: Number,\r\n        default: 100\r\n      }\r\n    },\r\n    computed: {\r\n      chartOptions() {\r\n        return {\r\n          chart: {\r\n            type: 'radialBar',\r\n          },\r\n          plotOptions: {\r\n            radialBar: {\r\n              hollow: {\r\n                size: '70%',\r\n              },\r\n              dataLabels: {\r\n                name: {\r\n                  offsetY: -10,\r\n                  color: '#888',\r\n                  fontSize: '13px'\r\n                },\r\n                value: {\r\n                  color: '#111',\r\n                  fontSize: '30px',\r\n                  show: true,\r\n                }\r\n              }\r\n            },\r\n          },\r\n          labels: [this.title],\r\n        };\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  </style>\r\n  "],"mappings":";;;uBACIA,mBAAA,CAGM,cAFJC,mBAAA,CAAoB,YAAAC,gBAAA,CAAbC,MAAA,CAAAC,KAAK,kBACZC,YAAA,CAA+FC,oBAAA;IAApFC,IAAI,EAAC,WAAW;IAACC,MAAM,EAAC,KAAK;IAAEC,OAAO,EAAEC,QAAA,CAAAC,YAAY;IAAGC,MAAM,GAAGT,MAAA,CAAAU,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}