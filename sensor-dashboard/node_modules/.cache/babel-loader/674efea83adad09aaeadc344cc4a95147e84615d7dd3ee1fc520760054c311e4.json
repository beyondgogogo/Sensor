{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-7ba5bd90\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"Sensor Data Dashboard\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Soil Moisture\", -1 /* HOISTED */));\nconst _hoisted_4 = {\n  ref: \"soilMoistureChart\",\n  style: {\n    \"width\": \"600px\",\n    \"height\": \"400px\"\n  }\n};\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"Light Intensity\", -1 /* HOISTED */));\nconst _hoisted_6 = {\n  ref: \"lightIntensityChart\",\n  style: {\n    \"width\": \"600px\",\n    \"height\": \"400px\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", null, [_hoisted_3, _createElementVNode(\"div\", _hoisted_4, null, 512 /* NEED_PATCH */)]), _createElementVNode(\"div\", null, [_hoisted_5, _createElementVNode(\"div\", _hoisted_6, null, 512 /* NEED_PATCH */)])]);\n}","map":{"version":3,"names":["id","_createElementVNode","ref","style","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","_hoisted_6"],"sources":["D:\\Vue\\sensor-dashboard\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <h1>Sensor Data Dashboard</h1>\n    <div>\n      <h2>Soil Moisture</h2>\n      <div ref=\"soilMoistureChart\" style=\"width: 600px; height: 400px;\"></div>\n    </div>\n    <div>\n      <h2>Light Intensity</h2>\n      <div ref=\"lightIntensityChart\" style=\"width: 600px; height: 400px;\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as echarts from 'echarts';\n\nexport default {\n  data() {\n    return {\n      sensorData: [],\n      soilMoistureData: [],\n      lightIntensityData: []\n    };\n  },\n  created() {\n    this.fetchSensorData();\n  },\n  methods: {\n    fetchSensorData() {\n      this.$http.get('http://localhost:8080/api/sensor-data')\n        .then(response => {\n          this.sensorData = response.data;\n          this.processSensorData();\n          this.initCharts();\n        })\n        .catch(error => {\n          console.log(error);\n        });\n    },\n    processSensorData() {\n      this.sensorData.forEach(data => {\n        if (data.type === 'soilMoisture') {\n          this.soilMoistureData.push([data.timestamp, data.value]);\n        } else if (data.type === 'lightIntensity') {\n          this.lightIntensityData.push([data.timestamp, data.value]);\n        }\n      });\n    },\n    initCharts() {\n      this.initSoilMoistureChart();\n      this.initLightIntensityChart();\n    },\n    initSoilMoistureChart() {\n      const chart = echarts.init(this.$refs.soilMoistureChart);\n      const option = {\n        title: {\n          text: 'Soil Moisture'\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        xAxis: {\n          type: 'category',\n          data: this.soilMoistureData.map(item => item[0])\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          data: this.soilMoistureData.map(item => item[1]),\n          type: 'line'\n        }]\n      };\n      chart.setOption(option);\n    },\n    initLightIntensityChart() {\n      const chart = echarts.init(this.$refs.lightIntensityChart);\n      const option = {\n        title: {\n          text: 'Light Intensity'\n        },\n        tooltip: {\n          trigger: 'axis'\n        },\n        xAxis: {\n          type: 'category',\n          data: this.lightIntensityData.map(item => item[0])\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          data: this.lightIntensityData.map(item => item[1]),\n          type: 'line'\n        }]\n      };\n      chart.setOption(option);\n    }\n  }\n}\n</script>\n\n<style scoped>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n\n\n<!-- <template>\n  <img alt=\"Vue logo\" src=\"./assets/logo.png\">\n  <HelloWorld msg=\"Welcome to Your Vue.js App\"/>\n</template>\n\n<script>\nimport HelloWorld from './components/HelloWorld.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    HelloWorld\n  }\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style> -->\n\n\n"],"mappings":";;;EACOA,EAAE,EAAC;AAAK;gEACXC,mBAAA,CAA8B,YAA1B,uBAAqB;gEAEvBA,mBAAA,CAAsB,YAAlB,eAAa;;EACZC,GAAG,EAAC,mBAAmB;EAACC,KAAoC,EAApC;IAAA;IAAA;EAAA;;gEAG7BF,mBAAA,CAAwB,YAApB,iBAAe;;EACdC,GAAG,EAAC,qBAAqB;EAACC,KAAoC,EAApC;IAAA;IAAA;EAAA;;;uBARnCC,mBAAA,CAUM,OAVNC,UAUM,GATJC,UAA8B,EAC9BL,mBAAA,CAGM,cAFJM,UAAsB,EACtBN,mBAAA,CAAwE,OAAxEO,UAAwE,8B,GAE1EP,mBAAA,CAGM,cAFJQ,UAAwB,EACxBR,mBAAA,CAA0E,OAA1ES,UAA0E,8B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}